### LabDevice Driver Framework 
A open source framewok handling interactions with typical laboratory devices.
The framework consists of a communication layer and a device layer.
A bottom layer for communication that can handle GPIB, Ethernet, and GPIB-over-Ethernet communication 
is the base of the framework. On top typical SCPI (Standard Commands for Programmable Instruments) commands 
are implemented to free the user from searching through endless user manuals.
This framework can be used as stand-alone or can yield the basis for all Matlab measurement applications.

### Supported Communication Interfaces
  * mode= "eth";
  * mode= "gpib";
  * mode= "eth2gpib";

### Example
Use with Ethernet
<code Matlab>
mode="eth"; % Using ethernet interface for communication
adress="192.168.1.20"; % IP Adress of device
emiTestReceiver=ESPR(mode, adress);
emiTestReceiver.setStartFreq(1e3);
</code>

// TODO ADD USE WITH GPIB HERE

### Structure
<code Matlab> @labDevice </code>
Superclass for all lab Devices
<code Matlab> functions </code>
Contains all low level functionality like opening and closing connection to device.
Namespaces (contianing + in front of foldername) seperate *open* and *close* functions of the interfaces (e.g. eth or gpib). 

### Adding labdevicedreivers as a submodule
To integrate the labdevice framework in an existing repo as a submodule:

<code Matlab>
git submodule add git@git.etech.fh-augsburg.de:emc/labdevicedrivers.git 
</code>

**Keep in mind:** git pull on the main repository does not update the submodule.
After git pull you need to execute 

<code Matlab>
git submodule update --init --remote labdevicedrivers
</code>
to update the submodule after running git pull.